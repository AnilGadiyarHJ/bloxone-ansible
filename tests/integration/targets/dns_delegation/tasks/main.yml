- module_defaults:
    group/infoblox.bloxone.all:
      csp_url: "{{ csp_url }}"
      api_key: "{{ api_key }}"

  block:
    # Create a random Delegation name to avoid conflicts
    - ansible.builtin.set_fact:
        auth_zone_fqdn: "test-auth-zone-{{ 999999 | random | string }}.com."
    - ansible.builtin.set_fact:
        delegation_fqdn: "test-delegation--{{ 999999 | random | string }}.{{ auth_zone_fqdn }}"

    - name: Create an Auth Zone in the specified view
      infoblox.bloxone.dns_auth_zone:
        fqdn: "{{ auth_zone_fqdn }}"
        primary_type: cloud
        view: "{{ _view.id }}"
        state: present
      register: auth_zone

    - name: Create a Delegation (check mode)
      infoblox.bloxone.dns_delegation:
        fqdn: "{{ delegation_fqdn }}"
        delegation_servers:
          - fqdn: "ns1.example.com."
            address: "12.0.0.0"
        view: "{{ _view.id }}"
        state: present
      check_mode: true
      register: delegation
    - name: Get Information about the Delegation
      infoblox.bloxone.dns_delegation_info:
        filters:
          fqdn: "{{ delegation_fqdn }}"
      register: delegation_info
    - assert:
        that:
          - delegation is changed
          - delegation_info is not failed
          - delegation_info.objects | length == 0


    # Create a Delegation
    - name: Create a Delegation
      infoblox.bloxone.dns_delegation:
        fqdn: "{{ delegation_fqdn }}"
        delegation_servers:
          - fqdn: "ns1.example.com."
            address: "12.0.0.0"
        view: "{{ _view.id }}"
        state: present
      register: delegation
    - name: Get Information about the Delegation
      infoblox.bloxone.dns_delegation_info:
        filters:
          fqdn: "{{ delegation_fqdn }}"
      register: delegation_info
    - assert:
        that:
          - delegation is changed
          - delegation_info.objects | length == 1
          - delegation_info.objects[0].fqdn == delegation.object.fqdn

    # Create a Delegation (idempotent)
    - name: Create a Delegation (idempotent)
      infoblox.bloxone.dns_delegation:
        fqdn: "{{ delegation_fqdn }}"
        delegation_servers:
          - fqdn: "ns1.example.com."
            address: "12.0.0.0"
        state: present
      register: delegation
    - assert:
        that:
          - delegation is not changed
          - delegation is not failed

    # Delete the Delegation (check mode)
    - name: Delete the Delegation (check mode)
      infoblox.bloxone.dns_delegation:
        fqdn: "{{ delegation_fqdn }}"
        state: absent
      check_mode: true
      register: delegation
    - name: Get Information about the Delegation before deletion
      infoblox.bloxone.dns_delegation_info:
        filters:
          fqdn: "{{ delegation_fqdn }}"
      register: delegation
    - assert:
        that:
          - delegation is changed
          - delegation is not failed
          - delegation.objects | length == 1

    # Delete the Delegation
    - name: Delete the Delegation
      infoblox.bloxone.dns_delegation:
        fqdn: "{{ delegation_fqdn }}"
        state: absent
      register: delegation
    - name: Get Information about the Delegation after deletion
      infoblox.bloxone.dns_delegation_info:
        filters:
          fqdn: "{{ delegation_fqdn }}"
      register: delegation_info
    - assert:
        that:
          - delegation_info is changed
          - delegation_info is not failed
          - delegation_info.objects | length == 0

    # Delete the Delegation (idempotent)
    - name: Delete the Delegation (idempotent)
      infoblox.bloxone.dns_delegation:
        fqdn: "{{ delegation_fqdn }}"
        state: absent
      register: delegation
    - assert:
        that:
          - delegation is not changed
          - delegation is not failed